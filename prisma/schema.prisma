generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Project {
  id          String   @id @default(uuid())
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  creator   User   @relation("CreatedProjects", fields: [creatorId], references: [id])
  creatorId String

  memberships Membership[]
  Task        Task[]
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String?
  createdAt DateTime @default(now())

  createdProjects Project[]    @relation("CreatedProjects") // These are the lists of project crated by the user
  memberships     Membership[]

  passwordResetToken String?
  passwordResetExpires DateTime?

  createdTasks  Task[] @relation("CreatedTasks")
  assignedTasks Task[] @relation("AssignedTasks")
}

model Membership {
  id        String   @id @default(uuid())
  role      Role     @default(MEMBER)
  createdAt DateTime @default(now())

  // Foreign keys
  user   User   @relation(fields: [userId], references: [id])
  userId String

  project   Project @relation(fields: [projectId], references: [id])
  projectId String

  @@unique([userId, projectId]) // prevent duplicate memberships
}

enum Role {
  OWNER
  ADMIN
  MEMBER
  VIEWER
}

model Task {
  id          String       @id @default(uuid())
  title       String
  description String?
  status      TaskStatus   @default(TODO)
  priority    TaskPriority @default(MEDIUM)
  dueDate     DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Foreign Keys
  project   Project @relation(fields: [projectId], references: [id])
  projectId String

  createdBy   User   @relation("CreatedTasks", fields: [createdById], references: [id])
  createdById String

  assignedTo   User?   @relation("AssignedTasks", fields: [assignedToId], references: [id])
  assignedToId String?
}

enum TaskStatus {
  TODO
  IN_PROGRESS
  DONE
}

enum TaskPriority {
  LOW
  MEDIUM
  HIGH
}
